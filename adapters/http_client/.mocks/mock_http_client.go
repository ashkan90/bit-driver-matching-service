// Code generated by MockGen. DO NOT EDIT.
// Source: adapters/http_client/client.go

// Package mocks is a generated GoMock package.
package mocks

import (
	io "io"
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockClientImplementation is a mock of ClientImplementation interface.
type MockClientImplementation struct {
	ctrl     *gomock.Controller
	recorder *MockClientImplementationMockRecorder
}

// MockClientImplementationMockRecorder is the mock recorder for MockClientImplementation.
type MockClientImplementationMockRecorder struct {
	mock *MockClientImplementation
}

// NewMockClientImplementation creates a new mock instance.
func NewMockClientImplementation(ctrl *gomock.Controller) *MockClientImplementation {
	mock := &MockClientImplementation{ctrl: ctrl}
	mock.recorder = &MockClientImplementationMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClientImplementation) EXPECT() *MockClientImplementationMockRecorder {
	return m.recorder
}

// Do mocks base method.
func (m *MockClientImplementation) Do(method, url string, body io.Reader) (*http.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Do", method, url, body)
	ret0, _ := ret[0].(*http.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Do indicates an expected call of Do.
func (mr *MockClientImplementationMockRecorder) Do(method, url, body interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Do", reflect.TypeOf((*MockClientImplementation)(nil).Do), method, url, body)
}

// Get mocks base method.
func (m *MockClientImplementation) Get(url string) (*http.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", url)
	ret0, _ := ret[0].(*http.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockClientImplementationMockRecorder) Get(url interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockClientImplementation)(nil).Get), url)
}
